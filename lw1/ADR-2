ADR - [Выбор языка программирования для серверной части]

Дата: 11 сентября 2024 года 
Статус: Принято
## Контекст
При разработке серверной части нашего видеохостинга мы стоим перед выбором технологии программирования. Этот выбор будет влиять на скорость разработки, стабильность, производительность.
Рассмотренные варианты
Go: Язык, оптимизированный для создания высокопроизводительных сетевых приложений.
Kotlin: Современный язык с хорошей производительностью,  читаемостью кода и безопасностью типов.
Java: Широко используемый для разработки серверных приложений, с большим сообществом и обширной экосистемой библиотек.
Python: Высокоуровневый язык с простым и лаконичным синтаксисом, но может иметь проблемы с производительностью на серверной стороне.
Решение
Выбран Go. Это решение было выбрано из-за следующих причин:
Компилируемый язык: В отличие от интерпретируемых языков, таких как Python и JavaScript, код Golang напрямую транслируется в машинный код посредством компиляции. Это приводит к более высокой скорости выполнения и более эффективному использованию системных ресурсов.
Низкая задержка и высокая пропускная способность: Благодаря эффективному параллелизму и скорости выполнения Golang отлично подходит для создания приложений с низкой задержкой и высокой пропускной способностью.
Управление памятью: Golang имеет мощный сборщик мусора, разработанный для минимизации времени пауз, освобождая память без значительных задержек.
Последствия
Плюсы:
Высокая производительность и масштабируемость. 
Возможность использовать существующие библиотеки и фреймворки, ускоряя разработку.
Минусы:
Ограниченная поддержка некоторых библиотек по сравнению с более зрелыми языками, такими как Java.
Риски:


Недостаточная производительность или масштабируемость при неправильном использовании языка или библиотек. Это можно минимизировать путем тщательного тестирования и оптимизации.
Все серверные компоненты будут разработаны на Go.

Затронутые области
Архитектура серверной части: Необходимость интеграции кода, написанного на Go, в единую архитектуру.
Инфраструктура: Обеспечение необходимых ресурсов и инструментов для разработки на Go.
Процессы разработки: Адаптация процессов разработки и тестирования для работы с Go.

История
11.09.2024, Щетиловым, Уразаевым, Петуховым. Основные обсуждения касались требований к языку программирования серверной части, в результате которых мы пришли к Go.
